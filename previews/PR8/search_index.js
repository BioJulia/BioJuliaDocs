var documenterSearchIndex = {"docs":
[{"location":"comparisons/bioconductor/#bioconductor","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"","category":"section"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"Bioconductor represents an ecosystem of related genomics tools written in the R programming language\nTools written in other languages, such as C and Python, are also included with R wrappers available \nInitially released over two decades ago, it now hosts over 2000 packages for bioinformatics and related fields\nPackages cover a broard range of methods for the analysis and manipulation of genomic data","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"Application BioJulia packages Bioconductor packages\nData structures BioSymbols, KmerAnalysis, IntervalTrees Biobase\nSequence annotation GenomicFeatures, GenomicAnnotations, FormatSpecimens AnnotationHub\nInput/Output FASTX, XAM, BigWig,... BiocIO, Biostrings, ShortRead,...\nSequence alignment BioSequences, BioAlignments Biostrings\nExpression analysis SingleCellProjections DESeq2","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"A few package/ecosystem equivalents between Julia and R:","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"Application Julia R\nData manipulation/analysis DataFrames, CSV, Query tibble, dplyr\nPlotting/visualization Gadfly, VegaLite, Makie ggplot2, vegalite, plotly\nStatistical analysis Statistics, HypothesisTests, GLM stats\nMachine learning Flux, SciML, Zygote mlr3, caret, tidymodels, Deriv\nNumerical mathematics LinearAlgebra, IterativeSolvers Matrix, pracma, deSolve\nWeb applications Genie, Franklin shiny","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"A few notable differences between Julia and R:","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"Julia R\nHigh-level, general-purpose compiled language High-level, interpreted language for statistical computing\nDynamically typed with multiple dispatch and optional type annotations Dynamically typed without type annotations support\nBuilt-in parallelism via threads, coroutines (Tasks) Parallelism via external libraries (BLAS, parallel,...)\nExtensive metaprogramming (Lisp-like macros, generated functions,...) Less extensive metaprogramming (function factories, expression manipulation,...)\nSingle implementation available (JuliaLang) Multiple implementations available (pqR, Renjin,...)","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"To transition from R to Julia:","category":"page"},{"location":"comparisons/bioconductor/","page":"Bioconductor (R)","title":"Bioconductor (R)","text":"See Noteworthy differences from R in the Julia manual for a more in-depth comparison\nUse RCall.jl to seamlessly integrate R code into your Julia project\nUse JuliaCall to seamlessly integrate Julia code into your R project","category":"page"},{"location":"comparisons/bioruby/#bioruby","page":"BioRuby (Ruby)","title":"BioRuby (Ruby)","text":"","category":"section"},{"location":"getting_started/biojuliainstallation/#biojuliainstallation","page":"Installing BioJulia Packages","title":"Installing BioJulia Packages","text":"","category":"section"},{"location":"comparisons/biojava/#biojava","page":"BioJava (Java)","title":"BioJava (Java)","text":"","category":"section"},{"location":"comparisons/scikitbio/#scikitbio","page":"scikit-bio (Python3)","title":"scikit-bio (Python3)","text":"","category":"section"},{"location":"comparisons/biopython/#biopython","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"","category":"section"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"Biopython represents an ecosystem of related biology tools written in the Python3 programming language\nUnlike in BioJulia, Biopython tools are installed together as modules into a single biopython package \nInitially released over two decades ago with major releases covering the Python2/3 transition\nCapabilities cover a number of molecular biology applications including sequence alignment, population genetics, and machine learning","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"Application BioJulia packages Biopython objects/modules\nSequence annotation GenomicFeatures, GenomicAnnotations Seq, SeqRecord\nInput/Output FASTX, XAM, BigWig,... Bio.SeqIO, Bio.AlignIO\nSequence alignment BioSequences, BioAlignments Bio.Align\nPopulation genetics PopGen Bio.PopGen","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"A few package/ecosystem equivalents between Julia and Python3:","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"Application Julia Python3\nData manipulation/analysis DataFrames, CSV, Query pandas, Blaze\nPlotting/visualization Plots, Gadfly, Makie matplotlib, seaborn, bokeh, plotnine, VisPy\nStatistical analysis Statistics, HypothesisTests, GLM SciPy, statsmodels\nMachine learning Flux, SciML, Zygote PyTorch, TensorFlow, scikit-learn, JAX\nNumerical mathematics LinearAlgebra, Symbolics NumPy, SciPy, SymPy\nNotebook/report generator IJulia, Pluto, Weave IPython, Jupyter Book\nWeb applications Genie, Franklin Django, Flask, Pelican, Dash","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"A few notable differences between Julia and Python3:","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"Julia Python3\nHigh-level, general-purpose compiled language High-level, general-purpose interpreted language\nExpression-based (statements yield a value) Statement-based (assignment as a statement)\nDynamically typed with multiple dispatch and optional type annotations Dynamically typed with optional type annotations\nBuilt-in parallelism via threads, coroutines (Tasks) Limited (GIL) parallelism via threads, async/await\nExtensive metaprogramming (Lisp-like macros, homoiconicity,...) Less extensive metaprogramming (decorators, metaclasses,...)\nIncluded default package manager No default package manager (poetry, conda, other alternatives available)\nSingle implementation available (JuliaLang) Multiple implementations available (PyPy, Numba,...)\nArrays are column-major (columns are contiguous in memory) (Numpy) arrays are row-major by default (rows are contiguous in memory)","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"To transition from Python3 to Julia:","category":"page"},{"location":"comparisons/biopython/","page":"Biopython (Python3)","title":"Biopython (Python3)","text":"See Noteworthy differences from Python in the Julia manual for a more in-depth comparison\nUse PythonCall.jl/CondaPkg.jl to seamlessly integrate Python3 code into your Julia project\nUse juliacall to seamlessly integrate Julia code into your Python3 project","category":"page"},{"location":"getting_started/toolsinstallation/#toolsinstallation","page":"Installing Development Tools","title":"Installing Development Tools","text":"","category":"section"},{"location":"comparisons/bioperl/#bioperl","page":"BioPerl (Perl)","title":"BioPerl (Perl)","text":"","category":"section"},{"location":"#BioJulia:-Fast,-open,-easy,-software-for-biology","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"","category":"section"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"Note: This landing site is under extensive development and will receive frequent updates.  It is not in a ready state, and is published under GitHub Pages only for testing purposes. ","category":"page"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"BioJulia is a passionate, community-led organization providing biology-related packages written  in the Julia programming language. The organization offers a comprehensive,  fully open-source ecosystem of both libraries that serve as essential building blocks for other packages  as well as interactive tools for everyday tasks and workflows. ","category":"page"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"Biologists are fully empowered by Julia to easily tackle domain-specific challenges, taking advantage of features including:","category":"page"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"Fully reproducible environments thanks to Julia's built-in package manager\nCompetitive performance that rivals that of lower-level, more complex languages such as C and Fortran\nUnicode-based math symbol support, transparent BLAS integration, and additional features for performing complex numerical operations   \nA batteries-included read-eval-print loop (REPL) for interactive data exploration and prototyping\nSeamless interoperability (JLLs, Cmd,...) with other languages via multiple foreign function interfaces","category":"page"},{"location":"#Where-to-Start?","page":"BioJulia: Fast, open, easy, software for biology","title":"Where to Start?","text":"","category":"section"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"Take a look at all BioJulia code via the official GitHub page.\nBegin contributing ideas and features following the core guidelines.\nDeep dive into the ecosystem over at the Overview.\nStart learning right away using the Getting Started tutorials.\nSee some awesome examples in the BioJulia Showcase.\nCompare performance with the BioJulia Open Benchmarks.\nCome chat with us over in the Slack #biology workspace and on forums.","category":"page"},{"location":"","page":"BioJulia: Fast, open, easy, software for biology","title":"BioJulia: Fast, open, easy, software for biology","text":"Use the top navigation bar to search for provided packages within one's field of interest.","category":"page"},{"location":"getting_started/juliainstallation/#juliainstallation","page":"Installing Julia","title":"Installing Julia","text":"","category":"section"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"There are a number of methods available to install Julia that each have their own advantages:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"note: Note\nUnix users: It is NOT recommended to install Julia from your distribution's package manager, as no such installation  is officially endorsed by the Julia project and thus may be out-of-date and broken/unmaintained!","category":"page"},{"location":"getting_started/juliainstallation/#juliaup-(recommended)","page":"Installing Julia","title":"juliaup (recommended)","text":"","category":"section"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"juliaup is a Julia manager/version multiplexer tool designed to handle your Julia installation from the command-line.  It is the easiest and most convenient installation option, and is available on almost all platforms that support Julia.","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"If you are running Linux or Mac, enter the following command in your terminal:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"curl -fsSL https://install.julialang.org | sh","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"If you are running Windows, enter the following:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"winget install julia -s msstore","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"If you have the Rust programming language installed on your machine, you can install juliaup via the Cargo package manager:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"warning: Warning\nThis is not a recommended option as this will involve compiling the actual juliaup executable on your local machine","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"cargo install juliaup","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"You can use the first and last commands listed to install Julia via juliaup in a container (see Docker/Podman below)","category":"page"},{"location":"getting_started/juliainstallation/#Docker/Podman","page":"Installing Julia","title":"Docker/Podman","text":"","category":"section"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"An official Docker image is available, allowing you to build containers with Julia already installed. This can be a preferred method of installation if you wish to test out Julia in a sandboxed, ephemeral (temporary) instance or are looking  to  include Julia in a containerized application.","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"You must first download the image via the Docker or Podman command-line tool:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"note: Note\nIf you are using Podman, you can replace the keyword docker with podman in any of the following commands!","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"docker pull julia:latest","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"You can specify which version of the image you wish to install via tags, such as latest, rc, 1.6, etc.","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"To create a run the container instance, run the following command:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"note: Note\nYou may skip the previous step if you have not already downloaded the image, Docker/Podman will automatically begin installing it for  you here!","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"docker run -it --rm --network host julia:latest","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"The above command creates an interactive container that will be deleted the moment you exit via the --rm option and that will also  share the same network namespace as your machine via the --network host option (allow for automatic port bindings). You may remove either option to disable their respective behaviours.","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"The image itself can serve as a base for your custom container built from a Dockerfile/Containerfile:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"FROM julia:latest\n# ...","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"If you wish to use a different image as the basis of your container, yet still require Julia, you can use any of the other installation methods listed in this section in your Dockerfile/Containerfile. A few examples with juliaup:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"# First option: Install juliaup via curl\nFROM ubuntu:latest\n\nRUN apt update && \\\n    apt install -y curl && \\\n    curl -fsSL https://install.julialang.org | sh -s -- -y # install juliaup non-interactively\n\nRUN juliaup add release\n\n# Second option: install juliaup in a Rust image (not recommended)\nFROM rust:latest\n\nRUN cargo install juliaup","category":"page"},{"location":"getting_started/juliainstallation/#Direct-download","page":"Installing Julia","title":"Direct download","text":"","category":"section"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"You can also install Julia as a downloadable executable from the Julia website's Download section.  You must make sure to install the correct Julia build for your machine based on:","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"native instruction set (x86_64, i686, ARM, Apple Silicon, PowerPC)\noperating system type (Windows, MacOS, Linux (Glibc), Linux (Musl), FreeBSD)\nbit compute type (32-bit, 64-bit)\ndesired level of support (Tier 1 (guaranteed to build and pass all tests) through Tier 4)","category":"page"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"Make sure to follow the exact installation steps for your machine in order to ensure the best experience.","category":"page"},{"location":"getting_started/juliainstallation/#Build-from-source","page":"Installing Julia","title":"Build from source","text":"","category":"section"},{"location":"getting_started/juliainstallation/","page":"Installing Julia","title":"Installing Julia","text":"For building/testing purposes, you may build Julia from the source code that is fully available in the Julia GitHub repository. Simply enter git clone https://github.com/JuliaLang/julia.git to copy the entire source on your machine, create a new git branch via git checkout -b name-of-branch, add your modifications, and run make to begin the Makefile build system.","category":"page"}]
}
