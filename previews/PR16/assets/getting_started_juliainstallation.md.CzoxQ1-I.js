import{_ as e,c as i,o as t,az as n}from"./chunks/framework.D4wCFcVx.js";const h=JSON.parse('{"title":"Installing Julia","description":"","frontmatter":{},"headers":[],"relativePath":"getting_started/juliainstallation.md","filePath":"getting_started/juliainstallation.md","lastUpdated":null}'),s={name:"getting_started/juliainstallation.md"};function o(l,a,p,r,c,u){return t(),i("div",null,a[0]||(a[0]=[n(`<h1 id="juliainstallation" tabindex="-1">Installing Julia <a class="header-anchor" href="#juliainstallation" aria-label="Permalink to &quot;Installing Julia {#juliainstallation}&quot;">​</a></h1><p>There are a number of methods available to install Julia that each have their own advantages:</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>It is NOT recommended to install Julia from your distribution&#39;s package manager, as no such installation is officially endorsed by the Julia project and thus may be out-of-date and broken/unmaintained!</p></div><h2 id="juliaup-(recommended)" tabindex="-1">juliaup (recommended) <a class="header-anchor" href="#juliaup-(recommended)" aria-label="Permalink to &quot;juliaup (recommended) {#juliaup-(recommended)}&quot;">​</a></h2><p><a href="https://github.com/JuliaLang/juliaup.git" target="_blank" rel="noreferrer">juliaup</a> is a Julia manager/version multiplexer tool designed to handle your Julia installation from the command-line. It is the easiest and most convenient installation option, and is available on almost all platforms that support Julia.</p><ul><li>If you are running <strong>Linux or Mac</strong>, enter the following command in your terminal:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>curl -fsSL https://install.julialang.org | sh</span></span></code></pre></div><ul><li>If you are running <strong>Windows</strong>, enter the following:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>winget install julia -s msstore</span></span></code></pre></div><ul><li>If you have the <strong>Rust</strong> programming language installed on your machine, you can install <code>juliaup</code> via the Cargo package manager:</li></ul><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This is not a recommended option as this will involve compiling the actual <code>juliaup</code> executable on your machine</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cargo install juliaup</span></span></code></pre></div><p>You can use the first and last commands listed to install Julia via <code>juliaup</code> in a container (see <a href="/BioJuliaDocs/previews/PR16/getting_started/juliainstallation#Docker/Podman">Docker/Podman</a> below)</p><h2 id="docker-podman" tabindex="-1">Docker/Podman <a class="header-anchor" href="#docker-podman" aria-label="Permalink to &quot;Docker/Podman&quot;">​</a></h2><p>An <a href="https://hub.docker.com/_/julia" target="_blank" rel="noreferrer">official Docker image</a> is available, allowing you to build containers with Julia already installed. This can be a preferred method of installation if you wish to test out Julia in a sandboxed, ephemeral (temporary) instance or are looking to include Julia in a containerized application.</p><p>You must first download the image via the Docker or Podman command-line tool:</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>If you are using Podman, you can replace the keyword <code>docker</code> with <code>podman</code> in any of the following commands!</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker pull julia:latest</span></span></code></pre></div><p>You can specify which version of the image you wish to install via tags, such as <code>latest</code>, <code>rc</code>, <code>1.6</code>, etc.</p><p>To create a container instance, run the following command:</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>You may skip the previous step if you have not already downloaded the image, Docker/Podman will automatically begin installing it for you here!</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run -it --rm --network host julia:latest</span></span></code></pre></div><p>The above command creates an interactive container that will be deleted the moment you exit via the <code>--rm</code> option and that will also share the same network namespace as your machine via the <code>--network host</code> option (allow for automatic port bindings). You may remove either option to disable their respective behaviours.</p><p>The image itself can serve as a base for your custom container built from a Dockerfile/Containerfile:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>FROM julia:latest</span></span>
<span class="line"><span># ...</span></span></code></pre></div><p>If you wish to use a different image as the basis of your container, yet still require Julia, you can use any of the other installation methods listed in this section in your Dockerfile/Containerfile. A few examples with <code>juliaup</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># First option: Install juliaup via curl</span></span>
<span class="line"><span>FROM ubuntu:latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RUN apt update &amp;&amp; \\</span></span>
<span class="line"><span>    apt install -y curl &amp;&amp; \\</span></span>
<span class="line"><span>    curl -fsSL https://install.julialang.org | sh -s -- -y # install juliaup non-interactively</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RUN juliaup add release</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Second option: install juliaup in a Rust image (not recommended)</span></span>
<span class="line"><span>FROM rust:latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RUN cargo install juliaup</span></span></code></pre></div><h2 id="Direct-download" tabindex="-1">Direct download <a class="header-anchor" href="#Direct-download" aria-label="Permalink to &quot;Direct download {#Direct-download}&quot;">​</a></h2><p>You can also install Julia as a downloadable executable from the Julia website&#39;s <a href="https://julialang.org/downloads/" target="_blank" rel="noreferrer">Download section</a>. You must make sure to install the correct Julia build for your machine based on:</p><ul><li><p>native instruction set (x86_64, i686, ARM, Apple Silicon, PowerPC)</p></li><li><p>operating system type (Windows, MacOS, Linux (Glibc), Linux (Musl), FreeBSD)</p></li><li><p>bit compute type (32-bit, 64-bit)</p></li><li><p>desired level of support (Tier 1 (guaranteed to build and pass all tests) through Tier 4)</p></li></ul><p>Make sure to follow the exact installation steps for your machine in order to ensure the best experience.</p><h2 id="Build-from-source" tabindex="-1">Build from source <a class="header-anchor" href="#Build-from-source" aria-label="Permalink to &quot;Build from source {#Build-from-source}&quot;">​</a></h2><p>For building/testing purposes, you may build Julia from the source code that is fully available in the <a href="https://github.com/JuliaLang/julia.git" target="_blank" rel="noreferrer">Julia GitHub repository</a>. Simply enter <code>git clone https://github.com/JuliaLang/julia.git</code> to copy the entire source on your machine, create a new git branch via <code>git checkout -b name-of-branch</code>, add your modifications, and run <code>make</code> to start the Makefile build.</p>`,33)]))}const m=e(s,[["render",o]]);export{h as __pageData,m as default};
